[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "patchmoe"
version = "0.1.0"
description = "A large-scale time series foundation model utilizing MoE architecture with multiple patch tokenizers"
readme = "README.md"
license = {text = "Apache-2.0"}
authors = [
    {name = "PatchMoE Team", email = "patchmoe@example.com"}
]
maintainers = [
    {name = "PatchMoE Team", email = "patchmoe@example.com"}
]
keywords = [
    "time-series",
    "forecasting", 
    "mixture-of-experts",
    "transformer",
    "deep-learning",
    "pytorch",
    "huggingface"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "torch>=2.0.0",
    "transformers>=4.40.1",
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "einops>=0.6.0",
]

[project.optional-dependencies]
full = [
    "xformers>=0.0.20",
    "accelerate>=0.20.0",
    "datasets>=2.0.0",
    "scikit-learn>=1.0.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=22.0",
    "flake8>=4.0",
    "isort>=5.0",
    "mypy>=0.900",
    "pre-commit>=2.0.0",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
    "sphinx-autodoc-typehints>=1.0",
    "myst-parser>=0.18.0",
]

[project.urls]
Homepage = "https://github.com/patch-moe/patchmoe"
Repository = "https://github.com/patch-moe/patchmoe"
Documentation = "https://patchmoe.readthedocs.io"
"Bug Tracker" = "https://github.com/patch-moe/patchmoe/issues"

[project.scripts]
patchmoe-train = "patchmoe.trainer.train:main"
patchmoe-eval = "patchmoe.trainer.evaluate:main"

[tool.setuptools.packages.find]
include = ["patchmoe*"]

[tool.setuptools.package-data]
patchmoe = ["figures/*.png"]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=patchmoe",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
